/**
 * Clase que presenta los resultados de la busqueda y
 * y las metricas de rendimiento del algoritmo
 */
public class ResultPresenter {
    /**
     * Metodo para condicionar y mostrar los resultados de la b√∫squeda.
     *
     * @param oracle El objeto que contiene el mensaje secreto.
     * @param found Indica si el n√∫mero fue encontrado en el arreglo.
     * @param userGuess El n√∫mero que el usuario adivin√≥.
     * @param magicNumber El n√∫mero m√°gico que se busca.
     * @param sortTime El tiempo que tom√≥ ordenar el arreglo, en nanosegundos.
     * @param searchTime El tiempo que tom√≥ realizar la b√∫squeda, en nanosegundos.
     */
    public static void showResults(OracleMessage oracle, boolean found,
                                   int userGuess, int magicNumber,
                                   long sortTime, long searchTime) {
        if (found && userGuess == magicNumber) {
            System.out.println("\nüéâ ¬°Correcto! Has descubierto el mensaje secreto:");
            System.out.println(oracle.revealSecret());
        } else if (found) {
            System.out.println("\n‚úÖ El n√∫mero existe, pero no es el m√°gico. Sigue buscando...");
        } else {
            System.out.println("\n‚ùå El n√∫mero no est√° entre los c√≥digos m√°gicos.");
        }

        System.out.println("\nüìä M√©tricas de rendimiento:");
        System.out.printf("‚Ä¢ Tiempo de ordenamiento: %,d ns%n", sortTime);
        System.out.printf("‚Ä¢ Tiempo de b√∫squeda binaria: %,d ns%n", searchTime);

        System.out.println("\nüìä An√°lisis Big O:");
        System.out.println("- Ordenamiento (MergeSort): O(n log n)");
        System.out.println("- B√∫squeda binaria: O(log n)");
    }

}
